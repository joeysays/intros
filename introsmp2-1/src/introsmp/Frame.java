/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package introsmp;

import java.awt.Color;
import java.util.ArrayList;
import java.util.concurrent.locks.ReentrantLock;

import javax.swing.JTextPane;

/**
 *
 * @author Belle
 */
public class Frame extends javax.swing.JFrame {
    
    Formatter formatter;
    ArrayList<Station> stations;
    ArrayList<Train> trains;
    
    //caltrain will take the stations and trains
    
    private Controller controller;
    
    

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
        formatter = new Formatter();
        stations = new ArrayList<>();
        for (int i = 0; i < 8; i++) {
            stations.add(new Station(i + 1, false));
            
        }
        trains = new ArrayList<>();
    }
    
    public Frame(Controller c) {
    	this.controller = c;
    	initComponents();
    	
    	setVisible(true);
    }
    
    

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane5 = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane6 = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPane7 = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextPane8 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        addpass = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        launch = new javax.swing.JButton();
        move = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextPane9 = new javax.swing.JTextPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextPane10 = new javax.swing.JTextPane();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextPane11 = new javax.swing.JTextPane();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextPane12 = new javax.swing.JTextPane();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextPane13 = new javax.swing.JTextPane();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTextPane14 = new javax.swing.JTextPane();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTextPane15 = new javax.swing.JTextPane();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTextPane16 = new javax.swing.JTextPane();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTextPane17 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jTextPane1);

        jScrollPane2.setViewportView(jTextPane2);

        jScrollPane3.setViewportView(jTextPane3);

        jScrollPane4.setViewportView(jTextPane4);

        jScrollPane5.setViewportView(jTextPane5);

        jScrollPane6.setViewportView(jTextPane6);

        jScrollPane7.setViewportView(jTextPane7);

        jScrollPane8.setViewportView(jTextPane8);

        jLabel1.setText("STATION 1");

        jLabel2.setText("STATION 2");

        jLabel3.setText("STATION 3");

        jLabel4.setText("STATION 4");

        jLabel5.setText("STATION 5");

        jLabel6.setText("STATION 6");

        jLabel7.setText("STATION 7");

        jLabel8.setText("STATION 8");

        jTextField1.setText("1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel9.setText("PASSENGER ID:");

        jLabel10.setText("START STATION:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));

        jLabel11.setText("END STATION:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));
        jComboBox2.setSelectedIndex(1);

        addpass.setText("ADD");
        addpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addpassActionPerformed(evt);
            }
        });

        jLabel12.setText("TRAIN #:");

        jTextField2.setText("1");

        jLabel13.setText("CAPACITY:");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        launch.setText("LAUNCH");
        launch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchActionPerformed(evt);
            }
        });

        move.setText("Move");
        move.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveActionPerformed(evt);
            }
        });

        jScrollPane9.setViewportView(jTextPane9);

        jScrollPane10.setViewportView(jTextPane10);

        jScrollPane11.setViewportView(jTextPane11);

        jScrollPane12.setViewportView(jTextPane12);

        jScrollPane13.setViewportView(jTextPane13);

        jScrollPane14.setViewportView(jTextPane14);

        jScrollPane15.setViewportView(jTextPane15);

        jScrollPane16.setViewportView(jTextPane16);

        jLabel14.setText("FEED");

        jScrollPane17.setViewportView(jTextPane17);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(315, 315, 315)
                .addComponent(jLabel1)
                .addGap(156, 156, 156)
                .addComponent(jLabel2)
                .addGap(142, 142, 142)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(121, 121, 121))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane17)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(move)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(launch))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(addpass))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane15))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane11))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane12)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addComponent(jScrollPane16))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(173, 173, 173)
                .addComponent(jLabel7)
                .addGap(146, 146, 146)
                .addComponent(jLabel6)
                .addGap(151, 151, 151)
                .addComponent(jLabel5)
                .addGap(126, 126, 126))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane9)
                            .addComponent(jScrollPane10)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel14)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addpass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(launch)
                            .addComponent(move))
                        .addGap(46, 46, 46)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(jScrollPane7)
                            .addComponent(jScrollPane5))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(jScrollPane15)
                            .addComponent(jScrollPane16)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane17))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addpassActionPerformed
        // TODO add your handling code here:
        int passengerID = Integer.parseInt(jTextField1.getText());
        int departure = Integer.parseInt(jComboBox1.getSelectedItem().toString());
        int destination = Integer.parseInt(jComboBox2.getSelectedItem().toString());

        Passenger p = new Passenger(passengerID, departure, destination); //create new passenger when a passenger is added
        stations.get(departure - 1).addPassenger(p);
        formatter.appendToPane(jTextPane17, "Passenger #" + p.id + " is at Station " + p.start, Color.blue);
        formatter.appendToPane(jTextPane17, "\n", Color.blue);
        refreshView(p);
        
        String s = jTextField1.getText();
        int billNumber = Integer.valueOf(s);
        s = Integer.toString(++billNumber);
        jTextField1.setText(s);
    }//GEN-LAST:event_addpassActionPerformed

    private void launchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(jTextField2.getText());
        int capacity = Integer.parseInt(jTextField3.getText());
        int currStat = 1;
        int prevStat = 0;
        if(stations.get(0).isOccupied == false){
            Train t = new Train(id, currStat, capacity, prevStat);
            trains.add(t);
            stations.get(0).addTrain(t);
            stations.get(0).isOccupied = true;
            refreshView(t);
            
            String s = jTextField2.getText();
            int billNumber = Integer.valueOf(s);
            s = Integer.toString(++billNumber);
            jTextField2.setText(s);
            
            if(stations.get(0).passengers.size() > 0){
                int pS = stations.get(0).passengers.size();
                for(int i = 0; i < pS; i++){
                    if(pS <= stations.get(0).trains.get(0).capacity){
                        stations.get(0).trains.get(0).addPassenger(stations.get(0).passengers.get(0));
                        stations.get(0).removePassenger(stations.get(0).passengers.get(0));
                        formatter.appendToPane(jTextPane17, "Passenger #" + stations.get(0).trains.get(0).passengers.get(i).id + " boarded train # " + stations.get(0).trains.get(0).trainNo, Color.orange);
                        formatter.appendToPane(jTextPane17, "\n", Color.blue);
                        jTextPane1.setText("");
                    }
                }
                int i = 0;
//                while(i < stations.get(0).trains.get(0).capacity && )
            }
            for(int j = 0; j < stations.get(0).trains.get(0).passengers.size(); j++){
                System.out.println("Passenger #" + stations.get(0).trains.get(0).passengers.get(j).id);
            }
        }
        else{
            System.out.println("There is a train in station 0");
        }
        System.out.println("Station 1 train size " + stations.get(0).trains.size());
        
        
        
        
        //deployTrain(t);
    }//GEN-LAST:event_launchActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void boardPass(int Station){
        if(stations.get(Station).passengers.size() > 0){
            System.out.println("1size " + stations.get(Station).passengers.size());
            System.out.println("1in");
            int pS = stations.get(Station).passengers.size();
                for(int i = 0; i < pS; i++){
                    System.out.println("2i " + i + "and 2size " + stations.get(Station).passengers.size());
                    System.out.println("2in");
                    if(pS <= stations.get(Station).trains.get(0).capacity){
                        System.out.println("3ps " + stations.get(Station).passengers.size() + "and 3c " + stations.get(Station).trains.get(0).capacity);
                        System.out.println("3in");
                        stations.get(Station).trains.get(0).addPassenger(stations.get(Station).passengers.get(0));
                        stations.get(Station).removePassenger(stations.get(Station).passengers.get(0));
                        formatter.appendToPane(jTextPane17, "Passenger #" + stations.get(Station).trains.get(0).passengers.get(stations.get(Station).trains.get(0).passengers.size() - 1).id + " boarded train # " + stations.get(Station).trains.get(0).trainNo, Color.orange);
                        formatter.appendToPane(jTextPane17, "\n", Color.blue);
                        
                        switch(Station){
                            case 0:
                                jTextPane1.setText("");
                                break;
                            case 1:
                                jTextPane2.setText("");
                                break;
                            case 2:
                                jTextPane3.setText("");
                                break;
                            case 3:
                                jTextPane4.setText("");
                                break;
                            case 4:
                                jTextPane5.setText("");
                                break;
                            case 5:
                                jTextPane6.setText("");
                                break;
                            case 6:
                                jTextPane7.setText("");
                                break;
                            case 7:
                                jTextPane8.setText("");
                                break;

                        }
                    }
                }
                System.out.println("# of passengers " + stations.get(Station).trains.get(0).passengers.size());
                for(int j = 0; j < stations.get(Station).trains.get(0).passengers.size(); j++){
                    System.out.println("27Passenger #" + stations.get(Station).trains.get(0).passengers.get(j).id);
                }
                
                
                        
            }
        
    }
    
    private void getOffPass(int Station){
        System.out.println("1Im in");
        if(stations.get(Station - 1).trains.get(0).passengers.size() > 0){
            int pS = stations.get(Station - 1).trains.get(0).passengers.size();
            for(int i = 0; i < pS; i++){
                System.out.println("2Im in");
                if(stations.get(Station - 1).trains.get(0).passengers.get(0).end == Station){
                    System.out.println("3Im in");
                    formatter.appendToPane(jTextPane17, "Passenger #" + stations.get(Station-1).trains.get(0).passengers.get(0).id + " is disembarked train # " + stations.get(Station-1).trains.get(0).trainNo + " at station # " + stations.get(Station-1).stationNo, Color.red);
                    formatter.appendToPane(jTextPane17, "\n", Color.blue);
                    stations.get(Station - 1).trains.get(0).removePassenger(stations.get(Station - 1).trains.get(0).passengers.get(0));

    //                stations.get(Station).trains.get(0).removePassenger(stations.get(Station).trains.get(0).passengers.get(i));
    //                formatter.appendToPane(jTextPane17, "Passenger #" + stations.get(Station).trains.get(0).passengers.get(stations.get(Station).trains.get(0).passengers.size()).id + " is disembarked train # " + stations.get(Station).trains.get(0).trainNo, Color.red);
    //                formatter.appendToPane(jTextPane17, "\n", Color.blue);
                }
            }
        }
    }
    
    private void moveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveActionPerformed
        // TODO add your handling code here:
        System.out.println(trains.size());
        System.out.println(stations.get(0).trains.size());
        System.out.println(stations.size());
        
        int i;
        
        
        for(i = 7; i >= 0; i--){
                if(stations.get(i).trains.size() > 0){

                    switch(i){
                        case 0: // moves to station 2
                            System.out.println("Station 2");
                            
                            if(stations.get(0).trains.get(0).prevStat != 8){
                                stations.get(1).addTrain(stations.get(0).trains.get(0)); // adds train to station 2

                                stations.get(1).trains.get(0).currStat = 2;
                                stations.get(1).trains.get(0).prevStat = 1;
                                getOffPass(2);
                                boardPass(1);

                                stations.get(0).removeTrain(stations.get(0).trains.get(0)); // removes train from station 1
                                stations.get(0).isOccupied = false;
                                stations.get(1).isOccupied = true;

                                refreshView(stations.get(1).trains.get(0));
                                break;
                            }
                            else{
                                stations.get(0).trains.get(0).prevStat = 1;

                            //    refreshView(stations.get(0).trains.get(0));
                                break;
                            }

                        case 1: // moves to station 3
                                System.out.println("Station 3");
                                stations.get(2).addTrain(stations.get(1).trains.get(0)); // adds train to station 3
                                stations.get(2).trains.get(0).currStat = 3;
                                stations.get(2).trains.get(0).prevStat = 2;
                                getOffPass(3);
                                boardPass(2);

                                stations.get(1).removeTrain(stations.get(1).trains.get(0));
                                stations.get(1).isOccupied = false;
                                stations.get(2).isOccupied = true;

                                refreshView(stations.get(2).trains.get(0));
                                break;

                        case 2: // moves to station 4
                            System.out.println("Station 4");
                            stations.get(3).addTrain(stations.get(2).trains.get(0));
                            stations.get(3).trains.get(0).currStat = 4;
                            stations.get(3).trains.get(0).prevStat = 3;
                            getOffPass(4);
                            boardPass(3);
                            
                            stations.get(2).removeTrain(stations.get(2).trains.get(0));
                            stations.get(2).isOccupied = false;
                            stations.get(3).isOccupied = true;
                            
                            refreshView(stations.get(3).trains.get(0));
                            break;

                        case 3: // moves to station 5
                            System.out.println("Station 5");
                            stations.get(4).addTrain(stations.get(3).trains.get(0));
                            stations.get(4).trains.get(0).currStat = 5;
                            stations.get(4).trains.get(0).prevStat = 4;
                            getOffPass(5);
                            boardPass(4);
                            
                            stations.get(3).removeTrain(stations.get(3).trains.get(0));
                            stations.get(3).isOccupied = false;
                            stations.get(4).isOccupied = true;
                            
                            refreshView(stations.get(4).trains.get(0));
                            break;

                        case 4: // moves to station 6
                            System.out.println("Station 6");
                            stations.get(5).addTrain(stations.get(4).trains.get(0));
                            stations.get(5).trains.get(0).currStat = 6;
                            stations.get(5).trains.get(0).prevStat = 5;
                           getOffPass(6);
                            boardPass(5);
                            
                            stations.get(4).removeTrain(stations.get(4).trains.get(0));
                            stations.get(4).isOccupied = false;
                            stations.get(5).isOccupied = true;
                            
                            refreshView(stations.get(5).trains.get(0));
                            break;

                        case 5: // moves to station 7
                            System.out.println("Station 7");
                            stations.get(6).addTrain(stations.get(5).trains.get(0));
                            stations.get(6).trains.get(0).currStat = 7;
                            stations.get(6).trains.get(0).prevStat = 6;
                            getOffPass(7);
                            boardPass(6);
                            
                            stations.get(5).removeTrain(stations.get(5).trains.get(0));
                            stations.get(5).isOccupied = false;
                            stations.get(6).isOccupied = true;
                            
                            refreshView(stations.get(6).trains.get(0));
                            break;

                        case 6: // moves to station 8
                            System.out.println("Station 8");
                            stations.get(7).addTrain(stations.get(6).trains.get(0));
                            stations.get(7).trains.get(0).currStat = 8;
                            stations.get(7).trains.get(0).prevStat = 7;
                            getOffPass(8);
                            boardPass(7);
                            
                            stations.get(6).removeTrain(stations.get(6).trains.get(0));
                            stations.get(6).isOccupied = false;
                            stations.get(7).isOccupied = true;
                            
                            refreshView(stations.get(7).trains.get(0));
                            
                            break;

                        case 7: // moves to station 1
                            System.out.println("Station 1");
                            stations.get(0).addTrain(stations.get(7).trains.get(0));
                            stations.get(0).trains.get(0).currStat = 1;
                            stations.get(0).trains.get(0).prevStat = 8;
                            getOffPass(1);
                            boardPass(0);
                            
                            stations.get(7).removeTrain(stations.get(7).trains.get(0));
                            stations.get(7).isOccupied = false;
                            stations.get(0).isOccupied = true;
                            
                            refreshView(stations.get(0).trains.get(0));
                            i = 7;
                            System.out.println("Station 1 end");
                            break;

                    }
                    //    i = -1;
                }


        }        
        System.out.println("\n");
        System.out.println("Station 1 train size" + stations.get(0).trains.size()); 
        System.out.println("Station 2 train size" + stations.get(1).trains.size()); 
        System.out.println("Station 3 train size" + stations.get(2).trains.size()); 
        System.out.println("Station 4 train size" + stations.get(3).trains.size()); 
        System.out.println("Station 5 train size" + stations.get(4).trains.size()); 
        System.out.println("Station 6 train size" + stations.get(5).trains.size()); 
        System.out.println("Station 7 train size" + stations.get(6).trains.size()); 
        System.out.println("Station 8 train size" + stations.get(7).trains.size()); 
        System.out.println("\n");
    }//GEN-LAST:event_moveActionPerformed

    public void refreshView(Train train){
        switch(train.currStat){
            case 1:
            //    jTextPane9.setText("");
                jTextPane13.setText("");
                formatter.appendToPane(jTextPane9, "Train #" + train.trainNo + " is at Station 1", Color.green);
                formatter.appendToPane(jTextPane9, "\n", Color.green);
                break;
            
            case 2:
            //    jTextPane10.setText("");
                jTextPane9.setText("");
                formatter.appendToPane(jTextPane10, "Train #" + train.trainNo + " is at Station 2", Color.green);
                formatter.appendToPane(jTextPane10, "\n", Color.green);
                break;
            
            case 3:
            //    jTextPane11.setText("");
                jTextPane10.setText("");
                formatter.appendToPane(jTextPane11, "Train #" + train.trainNo + " is at Station 3", Color.green);
                formatter.appendToPane(jTextPane11, "\n", Color.green);
                break;
                
            case 4:
            //    jTextPane12.setText("");
                jTextPane11.setText("");
                formatter.appendToPane(jTextPane12, "Train #" + train.trainNo + " is at Station 4", Color.green);
                formatter.appendToPane(jTextPane12, "\n", Color.green);
                break;
                
            case 5:
            //    jTextPane16.setText("");
                jTextPane12.setText("");
                formatter.appendToPane(jTextPane16, "Train #" + train.trainNo + " is at Station 5", Color.green);
                formatter.appendToPane(jTextPane16, "\n", Color.green);
                break;
                
            case 6:
            //    jTextPane15.setText("");
                jTextPane16.setText("");
                formatter.appendToPane(jTextPane15, "Train #" + train.trainNo + " is at Station 6", Color.green);
                formatter.appendToPane(jTextPane15, "\n", Color.green);
                break;
            
            case 7:
            //    jTextPane14.setText("");
                jTextPane15.setText("");
                formatter.appendToPane(jTextPane14, "Train #" + train.trainNo + " is at Station 7", Color.green);
                formatter.appendToPane(jTextPane14, "\n", Color.green);
                break;
                
            case 8:
            //    jTextPane13.setText("");
                jTextPane14.setText("");
                formatter.appendToPane(jTextPane13, "Train #" + train.trainNo + " is at Station 8", Color.green);
                formatter.appendToPane(jTextPane13, "\n", Color.green);
                break;
        }
    }
    public void refreshView(Passenger passenger) {
        switch (passenger.start) {
            case 1:
                formatter.appendToPane(jTextPane1, "Passenger #" + passenger.id + " is at Station 1", Color.blue);
                formatter.appendToPane(jTextPane1, "\n", Color.blue);
                break;
            case 2:
                formatter.appendToPane(jTextPane2, "Passenger #" + passenger.id + " is at Station 2", Color.blue);
                formatter.appendToPane(jTextPane2, "\n", Color.blue);
                break;
            case 3:
                formatter.appendToPane(jTextPane3, "Passenger #" + passenger.id + " is at Station 3", Color.blue);
                formatter.appendToPane(jTextPane3, "\n", Color.blue);
                break;
            case 4:
                formatter.appendToPane(jTextPane4, "Passenger #" + passenger.id + " is at Station 4", Color.blue);
                formatter.appendToPane(jTextPane4, "\n", Color.blue);
                break;
            case 5:
                formatter.appendToPane(jTextPane5, "Passenger #" + passenger.id + " is at Station 5", Color.blue);
                formatter.appendToPane(jTextPane5, "\n", Color.blue);
                break;
            case 6:
                formatter.appendToPane(jTextPane6, "Passenger #" + passenger.id + " is at Station 6", Color.blue);
                formatter.appendToPane(jTextPane6, "\n", Color.blue);
                break;
            case 7:
                formatter.appendToPane(jTextPane7, "Passenger #" + passenger.id + " is at Station 7", Color.blue);
                formatter.appendToPane(jTextPane7, "\n", Color.blue);
                break;
            case 8:
                formatter.appendToPane(jTextPane8, "Passenger #" + passenger.id + " is at Station 8", Color.blue);
                formatter.appendToPane(jTextPane8, "\n", Color.blue);
                break;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addpass;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane10;
    private javax.swing.JTextPane jTextPane11;
    private javax.swing.JTextPane jTextPane12;
    private javax.swing.JTextPane jTextPane13;
    private javax.swing.JTextPane jTextPane14;
    private javax.swing.JTextPane jTextPane15;
    private javax.swing.JTextPane jTextPane16;
    private javax.swing.JTextPane jTextPane17;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JTextPane jTextPane5;
    private javax.swing.JTextPane jTextPane6;
    private javax.swing.JTextPane jTextPane7;
    private javax.swing.JTextPane jTextPane8;
    private javax.swing.JTextPane jTextPane9;
    private javax.swing.JButton launch;
    private javax.swing.JButton move;
    // End of variables declaration//GEN-END:variables
}
